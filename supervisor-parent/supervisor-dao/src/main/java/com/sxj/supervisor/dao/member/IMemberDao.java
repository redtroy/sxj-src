//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : 私享家架构设计  
//  @ File Name : IMemberDao.java
//  @ Date : 2014/8/11
//  @ Author : 
//
//
package com.sxj.supervisor.dao.member;

import java.sql.SQLException;
import java.util.List;

import com.sxj.mybatis.orm.annotations.Delete;
import com.sxj.mybatis.orm.annotations.Get;
import com.sxj.mybatis.orm.annotations.Insert;
import com.sxj.mybatis.orm.annotations.Update;
import com.sxj.supervisor.entity.member.MemberEntity;
import com.sxj.util.persistent.QueryCondition;

public interface IMemberDao
{
    
    public void update(MemberEntity member);
    
    /**
     * 新增会员
     *
     * @param member
     **/
    @Insert
    public void addMember(MemberEntity member);
    
    /**
     * 更新会员
     *
     * @param member
     **/
    @Update
    public void updateMember(MemberEntity member);
    
    /**
     * 获取会员信息
     *
     * @param id
     **/
    @Get
    public MemberEntity getMember(String id);
    
    /**
     * 获取会员信息
     *
     * @param id
     **/
    public MemberEntity getMemberByName(String name);
    
    /**
     * 删除会员
     *
     * @param id
     **/
    @Delete
    public void deleteMember(String id);
    
    /**
     * 查询会员
     *
     * @param member
     * @param memberList
     **/
    public List<MemberEntity> queryMembers(QueryCondition<MemberEntity> query)
            throws SQLException;
    
    /**
     * 查询会员
     * 前台会员首页列表查询，去掉冻结会员
     * @param member
     * @param memberList
     **/
    public List<MemberEntity> queryMembersWebSite(
            QueryCondition<MemberEntity> query) throws SQLException;
    
    /**
     * 增加会员子帐号数目信息 id 是MEMBER 表的 MEMBER_NO
     */
    public void addAccountNum(String id);
    
    /**
     * 查询会员
     *
     * @param member
     * @param memberList
     **/
    public List<MemberEntity> apiQueryMembers(QueryCondition<MemberEntity> query);
    
    /**
     * 查询附框厂列表
     *
     * @param member
     * @param memberList
     **/
    public List<MemberEntity> queryFramefactory(
            QueryCondition<MemberEntity> query);
    
    /**
     * 前台会员信息查询
     * @param query
     * @return
     * @throws SQLException
     */
    public List<MemberEntity> queryWebsiteMembers(
            QueryCondition<MemberEntity> query) throws SQLException;
    
    /**
     * 资政证书变动数目清0
     */
    public void updateChangeImageFlag();
    
    /**
     * 更新会员第一次认证时间
     * @param member
     */
    public void updateMemberFirstDate(MemberEntity member);
}
